name: Build and Push Qio CLI to GAR

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: rainbowq
  REGION: us-west2
  GAR_LOCATION: us-west2-docker.pkg.dev/rainbowq/bows/
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: qio-cli
  TOKEN: ${{ secrets.GHA_CLASSIC_TOKEN }}

jobs:
  push-build-artifact:
    name: Upload Docker release to Google Artifact Registry
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          token: ${{ env.TOKEN }}
          fetch-depth: 0
      - name: "Docker meta"
        id: meta
        uses: docker/metadata-action@v5
        with:
          #          images: |
          #            rainbowq/qio-cli
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

            #      - name: "Get tag"
            #        id: get-tag
            #        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SA_KEY }}

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v1

      - name: "Docker auth"
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

          #      - name: "Build image"
          #        run: |
          #          docker build -t "${{ env.IMAGE }}_${{ steps.get-tag.outputs.short_ref }}" \
          #          --build-arg GITHUB_SHA=${{ env.GITHUB_SHA }} \
          #          --build-arg GITHUB_REF=${{ env.GITHUB_REF }} .

      - name: "Build and push"
        uses: docker/build-push-action@v5
        with:
          #          push: ${{ github.event_name != 'pull_request' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
            #          tags: |
            #            ${{ env.GAR_LOCATION }}${{ env.IMAGE }}:${{ steps.get-tag.outputs.short_ref }}
            #            ${{ env.GAR_LOCATION }}${{ env.IMAGE }}:latest
