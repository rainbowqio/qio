name: Build Qio CLI and push to GCR

on:
  push:
    tags:
      - 0.0.*

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE: qio
  RHOST: gcr.io


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCR_KEY }}
        export_default_credentials: true

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build
      run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'` && echo $TAG
        docker build -t "${IMAGE}_${TAG}" \
          --build-arg GITHUB_SHA="${GITHUB_SHA}" \
          --build-arg GITHUB_REF="${GITHUB_REF}" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'` && echo $TAG
        # First tag and push the version
        docker tag "${IMAGE}_${TAG}" "$RHOST"/"$GCLOUD_PROJECT"/"${IMAGE}-cli":"$TAG"
        docker push "$RHOST"/"$GCLOUD_PROJECT"/"${IMAGE}-cli":"$TAG"
        # Then tag this as 'latest' and push
        docker tag "${IMAGE}_${TAG}" "$RHOST"/"$GCLOUD_PROJECT"/"${IMAGE}-cli":latest
        docker push "$RHOST"/"$GCLOUD_PROJECT"/"${IMAGE}-cli":latest
